{"version":3,"sources":["select.js","select_without_templates.js","templates.js"],"names":["KEY","TAB","ENTER","ESC","SPACE","LEFT","UP","RIGHT","DOWN","SHIFT","CTRL","ALT","PAGE_UP","PAGE_DOWN","HOME","END","BACKSPACE","DELETE","COMMAND","MAP",91,8,9,13,16,17,18,19,20,27,32,33,34,35,36,37,38,39,40,43,44,45,46,48,49,50,51,52,53,54,55,56,57,59,61,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,144,145,186,187,188,189,190,191,192,219,220,221,222,"isControl","e","k","which","metaKey","ctrlKey","altKey","isFunctionKey","isVerticalMovement","indexOf","isHorizontalMovement","toSeparator","sep","undefined","angular","element","prototype","querySelectorAll","selector","this","closest","elem","matchesSelector","matches","webkitMatchesSelector","mozMatchesSelector","msMatchesSelector","bind","parentElement","latestId","uis","module","constant","theme","searchEnabled","sortable","placeholder","refreshDelay","closeOnSelect","skipFocusser","dropdownPosition","generateId","appendToBody","service","minErr","$$minErr","error","apply","arguments","message","replace","RegExp","Error","directive","link","scope","attrs","ctrl","transclude","clone","append","filter","escapeRegexp","queryToEscape","matchItem","query","factory","$document","$window","boundingClientRect","getBoundingClientRect","width","prop","height","top","pageYOffset","documentElement","scrollTop","left","pageXOffset","scrollLeft","uiSelectConfig","RepeatParser","uiSelectMinErr","$compile","restrict","require","templateUrl","tElement","addClass","parent","attr","compile","tAttrs","repeat","$select","transcludeFn","groupByExp","groupBy","groupFilterExp","groupFilter","parseRepeatAttr","disableChoiceExpression","uiDisableChoice","onHighlightCallback","onHighlight","position","toLowerCase","groups","length","getGroupNgRepeatExpression","choices","parserResult","repeatExpression","document","addEventListener","itemName","rowsInner","$on","remove","$watch","newValue","open","multiple","activate","activeIndex","tagging","isActivated","minimumInputLength","search","refresh","items","$observe","$eval","controller","$scope","$element","$timeout","$filter","$$uisDebounce","$parse","$injector","_findIndex","collection","predicate","thisArg","findIndex","value","list","Object","i","call","_resetSearchInput","resetSearchInput","EMPTY_SEARCH","selected","item","equals","_groupsFilter","groupNames","j","result","name","push","_handleDropDownSelection","key","processed","select","close","_ensureHighlightVisible","container","highlighted","posY","offsetTop","clientHeight","offsetHeight","isGrouped","paste","removeSelected","focus","disabled","focusser","fct","taggingTokens","tokens","lockChoiceExpression","clickTriggeredSelect","$animate","get","err","searchInput","isEmpty","isUndefined","initSearchValue","avoidReset","$broadcast","taggingLabel","enabled","animateHandler","phase","off","focusSearchInput","on","findGroupByName","group","repeatAttr","updateGroups","groupFn","forEach","groupName","isFunction","groupFilterFn","isArray","concat","setPlainItems","setItemsFn","parse","itemProperty","originalSource","source","createArrayFromObject","origSrc","$uisSource","keys","map","v","keyName","filters","newVal","oldVal","refreshItems","data","selectedItems","filteredItems","every","selectedItem","calculateDropdownPos","$watchCollection","isDefined","ngModel","$modelValue","_refreshDelayPromise","refreshAttr","cancel","isActive","itemScope","itemIndex","isDisabled","_uiSelectChoiceDisabled","$event","trim","selection","locals","onSelectCallback","$item","$model","modelMapper","type","$setTouched","setFocus","focusInput","clear","stopPropagation","toggle","preventDefault","isLocked","_uiSelectChoiceLocked","sizeWatch","updaterScheduled","sizeSearchInput","input","calculateContainerWidth","clientWidth","offsetParent","updateIfVisible","containerWidth","inputWidth","offsetLeft","css","noop","$$postDigest","$apply","tagged","keyCode","triggerHandler","newItem","window","clipboardData","getData","originalEvent","separator","split","oldsearch","onResize","uisOffset","controllerAs","match","exec","ngClass","combined","removeAttr","inputId","id","ctrls","onDocumentClick","contains","jQuery","target","focusableControls","targetController","tagName","$digest","positionDropdown","offset","style","after","originalWidth","find","resetDropdown","replaceWith","generatedId","baseTitle","title","focusserTitle","focusserId","onSelect","onRemoveCallback","onRemove","limit","parseInt","choiceGrouped","tabindex","taggingEval","autofocus","focusOn","transcluded","transcludedMatch","transcludedChoices","transcludedNoChoice","isOpen","dropdown","directionUpClassName","setDropdownPosUp","offsetDropdown","setDropdownPosDown","removeClass","opacity","body","getAttribute","attribute","hasAttribute","multi","setAllowClear","allow","allowClear","uiLockChoice","$evalAsync","activeMatchIndex","updateModel","$setViewValue","Date","now","refreshComponent","removeChoice","index","removedChoice","splice","getPlaceholder","_getCaretPosition","el","isNumber","selectionStart","_handleMatchSelection","getNewActiveMatchIndex","$selectMultiple","prev","last","curr","next","caretPosition","first","newIndex","Math","min","max","_findCaseInsensitiveDupe","arr","hasDupe","origItem","toUpperCase","_findApproxDupe","haystack","needle","dupeIndex","tempArr","copy","mockObj","isObject","isTag","$isEmpty","$parsers","unshift","resultMultiple","$formatters","inputValue","checkFnMultiple","p","trackByExp","propsItemNameMatches","oldValue","$render","$viewValue","event","tagItems","tagItem","stashArr","hasTag","slice","some","itemsWithoutTag","checkFnSingle","d","val","uiSelectSort","options","extend","axis","uiSelectSortOptions","draggingClassName","droppingClassName","droppingBeforeClassName","droppingAfterClassName","dataTransfer","setData","$index","toString","dropTimeout","move","from","to","dragOverHandler","offsetY","layerY","offsetX","layerX","dropHandler","droppedItemIndex","_dropHandler","theList","itemToMove","hasClass","$emit","array","callback","debounceTime","timeoutPromise","self","args","Array","expression","filterMatch","grouped","run","$templateCache","put"],"mappings":"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","file":"select.min.js","sourcesContent":["/*!\n * ui-select\n * http://github.com/angular-ui/ui-select\n * Version: 0.16.1 - 2016-04-06T19:14:00.889Z\n * License: MIT\n */\n\n\n(function () { \n\"use strict\";\nvar KEY = {\n    TAB: 9,\n    ENTER: 13,\n    ESC: 27,\n    SPACE: 32,\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    DOWN: 40,\n    SHIFT: 16,\n    CTRL: 17,\n    ALT: 18,\n    PAGE_UP: 33,\n    PAGE_DOWN: 34,\n    HOME: 36,\n    END: 35,\n    BACKSPACE: 8,\n    DELETE: 46,\n    COMMAND: 91,\n\n    MAP: { 91 : \"COMMAND\", 8 : \"BACKSPACE\" , 9 : \"TAB\" , 13 : \"ENTER\" , 16 : \"SHIFT\" , 17 : \"CTRL\" , 18 : \"ALT\" , 19 : \"PAUSEBREAK\" , 20 : \"CAPSLOCK\" , 27 : \"ESC\" , 32 : \"SPACE\" , 33 : \"PAGE_UP\", 34 : \"PAGE_DOWN\" , 35 : \"END\" , 36 : \"HOME\" , 37 : \"LEFT\" , 38 : \"UP\" , 39 : \"RIGHT\" , 40 : \"DOWN\" , 43 : \"+\" , 44 : \"PRINTSCREEN\" , 45 : \"INSERT\" , 46 : \"DELETE\", 48 : \"0\" , 49 : \"1\" , 50 : \"2\" , 51 : \"3\" , 52 : \"4\" , 53 : \"5\" , 54 : \"6\" , 55 : \"7\" , 56 : \"8\" , 57 : \"9\" , 59 : \";\", 61 : \"=\" , 65 : \"A\" , 66 : \"B\" , 67 : \"C\" , 68 : \"D\" , 69 : \"E\" , 70 : \"F\" , 71 : \"G\" , 72 : \"H\" , 73 : \"I\" , 74 : \"J\" , 75 : \"K\" , 76 : \"L\", 77 : \"M\" , 78 : \"N\" , 79 : \"O\" , 80 : \"P\" , 81 : \"Q\" , 82 : \"R\" , 83 : \"S\" , 84 : \"T\" , 85 : \"U\" , 86 : \"V\" , 87 : \"W\" , 88 : \"X\" , 89 : \"Y\" , 90 : \"Z\", 96 : \"0\" , 97 : \"1\" , 98 : \"2\" , 99 : \"3\" , 100 : \"4\" , 101 : \"5\" , 102 : \"6\" , 103 : \"7\" , 104 : \"8\" , 105 : \"9\", 106 : \"*\" , 107 : \"+\" , 109 : \"-\" , 110 : \".\" , 111 : \"/\", 112 : \"F1\" , 113 : \"F2\" , 114 : \"F3\" , 115 : \"F4\" , 116 : \"F5\" , 117 : \"F6\" , 118 : \"F7\" , 119 : \"F8\" , 120 : \"F9\" , 121 : \"F10\" , 122 : \"F11\" , 123 : \"F12\", 144 : \"NUMLOCK\" , 145 : \"SCROLLLOCK\" , 186 : \";\" , 187 : \"=\" , 188 : \",\" , 189 : \"-\" , 190 : \".\" , 191 : \"/\" , 192 : \"`\" , 219 : \"[\" , 220 : \"\\\\\" , 221 : \"]\" , 222 : \"'\"\n    },\n\n    isControl: function (e) {\n        var k = e.which;\n        switch (k) {\n        case KEY.COMMAND:\n        case KEY.SHIFT:\n        case KEY.CTRL:\n        case KEY.ALT:\n            return true;\n        }\n\n        if (e.metaKey || e.ctrlKey || e.altKey) return true;\n\n        return false;\n    },\n    isFunctionKey: function (k) {\n        k = k.which ? k.which : k;\n        return k >= 112 && k <= 123;\n    },\n    isVerticalMovement: function (k){\n      return ~[KEY.UP, KEY.DOWN].indexOf(k);\n    },\n    isHorizontalMovement: function (k){\n      return ~[KEY.LEFT,KEY.RIGHT,KEY.BACKSPACE,KEY.DELETE].indexOf(k);\n    },\n    toSeparator: function (k) {\n      var sep = {ENTER:\"\\n\",TAB:\"\\t\",SPACE:\" \"}[k];\n      if (sep) return sep;\n      // return undefined for special keys other than enter, tab or space.\n      // no way to use them to cut strings.\n      return KEY[k] ? undefined : k;\n    }\n  };\n\n/**\n * Add querySelectorAll() to jqLite.\n *\n * jqLite find() is limited to lookups by tag name.\n * TODO This will change with future versions of AngularJS, to be removed when this happens\n *\n * See jqLite.find - why not use querySelectorAll? https://github.com/angular/angular.js/issues/3586\n * See feat(jqLite): use querySelectorAll instead of getElementsByTagName in jqLite.find https://github.com/angular/angular.js/pull/3598\n */\nif (angular.element.prototype.querySelectorAll === undefined) {\n  angular.element.prototype.querySelectorAll = function(selector) {\n    return angular.element(this[0].querySelectorAll(selector));\n  };\n}\n\n/**\n * Add closest() to jqLite.\n */\nif (angular.element.prototype.closest === undefined) {\n  angular.element.prototype.closest = function( selector) {\n    var elem = this[0];\n    var matchesSelector = elem.matches || elem.webkitMatchesSelector || elem.mozMatchesSelector || elem.msMatchesSelector;\n\n    while (elem) {\n      if (matchesSelector.bind(elem)(selector)) {\n        return elem;\n      } else {\n        elem = elem.parentElement;\n      }\n    }\n    return false;\n  };\n}\n\nvar latestId = 0;\n\nvar uis = angular.module('ui.select', [])\n\n.constant('uiSelectConfig', {\n  theme: 'bootstrap',\n  searchEnabled: true,\n  sortable: false,\n  placeholder: '', // Empty by default, like HTML tag <select>\n  refreshDelay: 1000, // In milliseconds\n  closeOnSelect: true,\n  skipFocusser: false,\n  dropdownPosition: 'auto',\n  generateId: function() {\n    return latestId++;\n  },\n  appendToBody: false\n})\n\n// See Rename minErr and make it accessible from outside https://github.com/angular/angular.js/issues/6913\n.service('uiSelectMinErr', function() {\n  var minErr = angular.$$minErr('ui.select');\n  return function() {\n    var error = minErr.apply(this, arguments);\n    var message = error.message.replace(new RegExp('\\nhttp://errors.angularjs.org/.*'), '');\n    return new Error(message);\n  };\n})\n\n// Recreates old behavior of ng-transclude. Used internally.\n.directive('uisTranscludeAppend', function () {\n  return {\n    link: function (scope, element, attrs, ctrl, transclude) {\n        transclude(scope, function (clone) {\n          element.append(clone);\n        });\n      }\n    };\n})\n\n/**\n * Highlights text that matches $select.search.\n *\n * Taken from AngularUI Bootstrap Typeahead\n * See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L340\n */\n.filter('highlight', function() {\n  function escapeRegexp(queryToEscape) {\n    return ('' + queryToEscape).replace(/([.?*+^$[\\]\\\\(){}|-])/g, '\\\\$1');\n  }\n\n  return function(matchItem, query) {\n    return query && matchItem ? ('' + matchItem).replace(new RegExp(escapeRegexp(query), 'gi'), '<span class=\"ui-select-highlight\">$&</span>') : matchItem;\n  };\n})\n\n/**\n * A read-only equivalent of jQuery's offset function: http://api.jquery.com/offset/\n *\n * Taken from AngularUI Bootstrap Position:\n * See https://github.com/angular-ui/bootstrap/blob/master/src/position/position.js#L70\n */\n.factory('uisOffset',\n  ['$document', '$window',\n  function ($document, $window) {\n\n  return function(element) {\n    var boundingClientRect = element[0].getBoundingClientRect();\n    return {\n      width: boundingClientRect.width || element.prop('offsetWidth'),\n      height: boundingClientRect.height || element.prop('offsetHeight'),\n      top: boundingClientRect.top + ($window.pageYOffset || $document[0].documentElement.scrollTop),\n      left: boundingClientRect.left + ($window.pageXOffset || $document[0].documentElement.scrollLeft)\n    };\n  };\n}]);\n\nuis.directive('uiSelectChoices',\n  ['uiSelectConfig', 'uisRepeatParser', 'uiSelectMinErr', '$compile', '$window',\n  function(uiSelectConfig, RepeatParser, uiSelectMinErr, $compile, $window) {\n\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-choices');\n\n      // Gets theme attribute from parent (ui-select)\n      var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n      return theme + '/choices.tpl.html';\n    },\n\n    compile: function(tElement, tAttrs) {\n\n      if (!tAttrs.repeat) throw uiSelectMinErr('repeat', \"Expected 'repeat' expression.\");\n\n      return function link(scope, element, attrs, $select, transcludeFn) {\n\n        // var repeat = RepeatParser.parse(attrs.repeat);\n        var groupByExp = attrs.groupBy;\n        var groupFilterExp = attrs.groupFilter;\n\n        $select.parseRepeatAttr(attrs.repeat, groupByExp, groupFilterExp); //Result ready at $select.parserResult\n\n        $select.disableChoiceExpression = attrs.uiDisableChoice;\n        $select.onHighlightCallback = attrs.onHighlight;\n\n        $select.dropdownPosition = attrs.position ? attrs.position.toLowerCase() : uiSelectConfig.dropdownPosition;\n\n        if(groupByExp) {\n          var groups = element.querySelectorAll('.ui-select-choices-group');\n          if (groups.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-group but got '{0}'.\", groups.length);\n          groups.attr('ng-repeat', RepeatParser.getGroupNgRepeatExpression());\n        }\n\n        var choices = element.querySelectorAll('.ui-select-choices-row');\n        if (choices.length !== 1) {\n          throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row but got '{0}'.\", choices.length);\n        }\n\n        choices.attr('ng-repeat', $select.parserResult.repeatExpression(groupByExp))\n            .attr('ng-if', '$select.open'); //Prevent unnecessary watches when dropdown is closed\n        if ($window.document.addEventListener) {  //crude way to exclude IE8, specifically, which also cannot capture events\n          choices.attr('ng-click', '$select.select(' + $select.parserResult.itemName + ',$select.skipFocusser,$event)');\n        }\n\n        var rowsInner = element.querySelectorAll('.ui-select-choices-row-inner');\n        if (rowsInner.length !== 1) throw uiSelectMinErr('rows', \"Expected 1 .ui-select-choices-row-inner but got '{0}'.\", rowsInner.length);\n        rowsInner.attr('uis-transclude-append', ''); //Adding uisTranscludeAppend directive to row element after choices element has ngRepeat\n        if (!$window.document.addEventListener) {  //crude way to target IE8, specifically, which also cannot capture events - so event bindings must be here\n          rowsInner.attr('ng-click', '$select.select(' + $select.parserResult.itemName + ',$select.skipFocusser,$event)');\n        }\n\n        $compile(element, transcludeFn)(scope); //Passing current transcludeFn to be able to append elements correctly from uisTranscludeAppend\n\n        scope.$on('$destroy', function() {\n          choices.remove();\n        });\n\n        scope.$watch('$select.search', function(newValue) {\n          if(newValue && !$select.open && $select.multiple) $select.activate(false, true);\n          $select.activeIndex = $select.tagging.isActivated ? -1 : 0;\n          if (!attrs.minimumInputLength || $select.search.length >= attrs.minimumInputLength) {\n            $select.refresh(attrs.refresh);\n          } else {\n            $select.items = [];\n          }\n        });\n\n        attrs.$observe('refreshDelay', function() {\n          // $eval() is needed otherwise we get a string instead of a number\n          var refreshDelay = scope.$eval(attrs.refreshDelay);\n          $select.refreshDelay = refreshDelay !== undefined ? refreshDelay : uiSelectConfig.refreshDelay;\n        });\n      };\n    }\n  };\n}]);\n\n/**\n * Contains ui-select \"intelligence\".\n *\n * The goal is to limit dependency on the DOM whenever possible and\n * put as much logic in the controller (instead of the link functions) as possible so it can be easily tested.\n */\nuis.controller('uiSelectCtrl',\n  ['$scope', '$element', '$timeout', '$filter', '$$uisDebounce', 'uisRepeatParser', 'uiSelectMinErr', 'uiSelectConfig', '$parse', '$injector', '$window',\n  function($scope, $element, $timeout, $filter, $$uisDebounce, RepeatParser, uiSelectMinErr, uiSelectConfig, $parse, $injector, $window) {\n\n  var ctrl = this;\n\n  var EMPTY_SEARCH = '';\n\n  ctrl.placeholder = uiSelectConfig.placeholder;\n  ctrl.searchEnabled = uiSelectConfig.searchEnabled;\n  ctrl.sortable = uiSelectConfig.sortable;\n  ctrl.refreshDelay = uiSelectConfig.refreshDelay;\n  ctrl.paste = uiSelectConfig.paste;\n\n  ctrl.removeSelected = false; //If selected item(s) should be removed from dropdown list\n  ctrl.closeOnSelect = true; //Initialized inside uiSelect directive link function\n  ctrl.skipFocusser = false; //Set to true to avoid returning focus to ctrl when item is selected\n  ctrl.search = EMPTY_SEARCH;\n\n  ctrl.activeIndex = 0; //Dropdown of choices\n  ctrl.items = []; //All available choices\n\n  ctrl.open = false;\n  ctrl.focus = false;\n  ctrl.disabled = false;\n  ctrl.selected = undefined;\n\n  ctrl.dropdownPosition = 'auto';\n\n  ctrl.focusser = undefined; //Reference to input element used to handle focus events\n  ctrl.resetSearchInput = true;\n  ctrl.multiple = undefined; // Initialized inside uiSelect directive link function\n  ctrl.disableChoiceExpression = undefined; // Initialized inside uiSelectChoices directive link function\n  ctrl.tagging = {isActivated: false, fct: undefined};\n  ctrl.taggingTokens = {isActivated: false, tokens: undefined};\n  ctrl.lockChoiceExpression = undefined; // Initialized inside uiSelectMatch directive link function\n  ctrl.clickTriggeredSelect = false;\n  ctrl.$filter = $filter;\n\n  // Use $injector to check for $animate and store a reference to it\n  ctrl.$animate = (function () {\n    try {\n      return $injector.get('$animate');\n    } catch (err) {\n      // $animate does not exist\n      return null;\n    }\n  })();\n\n  ctrl.searchInput = $element.querySelectorAll('input.ui-select-search');\n  if (ctrl.searchInput.length !== 1) {\n    throw uiSelectMinErr('searchInput', \"Expected 1 input.ui-select-search but got '{0}'.\", ctrl.searchInput.length);\n  }\n\n  ctrl.isEmpty = function() {\n    return angular.isUndefined(ctrl.selected) || ctrl.selected === null || ctrl.selected === '' || (ctrl.multiple && ctrl.selected.length === 0);\n  };\n\n  function _findIndex(collection, predicate, thisArg){\n    if (collection.findIndex){\n      return collection.findIndex(predicate, thisArg);\n    } else {\n      var list = Object(collection);\n      var length = list.length >>> 0;\n      var value;\n\n      for (var i = 0; i < length; i++) {\n        value = list[i];\n        if (predicate.call(thisArg, value, i, list)) {\n          return i;\n        }\n      }\n      return -1;\n    }\n  }\n\n  // Most of the time the user does not want to empty the search input when in typeahead mode\n  function _resetSearchInput() {\n    if (ctrl.resetSearchInput || (ctrl.resetSearchInput === undefined && uiSelectConfig.resetSearchInput)) {\n      ctrl.search = EMPTY_SEARCH;\n      //reset activeIndex\n      if (ctrl.selected && ctrl.items.length && !ctrl.multiple) {\n        ctrl.activeIndex = _findIndex(ctrl.items, function(item){\n          return angular.equals(this, item);\n        }, ctrl.selected);\n      }\n    }\n  }\n\n    function _groupsFilter(groups, groupNames) {\n      var i, j, result = [];\n      for(i = 0; i < groupNames.length ;i++){\n        for(j = 0; j < groups.length ;j++){\n          if(groups[j].name == [groupNames[i]]){\n            result.push(groups[j]);\n          }\n        }\n      }\n      return result;\n    }\n\n  // When the user clicks on ui-select, displays the dropdown list\n  ctrl.activate = function(initSearchValue, avoidReset) {\n    if (!ctrl.disabled  && !ctrl.open) {\n      if(!avoidReset) _resetSearchInput();\n\n      $scope.$broadcast('uis:activate');\n\n      ctrl.open = true;\n\n      ctrl.activeIndex = ctrl.activeIndex >= ctrl.items.length ? 0 : ctrl.activeIndex;\n\n      // ensure that the index is set to zero for tagging variants\n      // that where first option is auto-selected\n      if ( ctrl.activeIndex === -1 && ctrl.taggingLabel !== false ) {\n        ctrl.activeIndex = 0;\n      }\n\n      var container = $element.querySelectorAll('.ui-select-choices-content');\n      var searchInput = $element.querySelectorAll('.ui-select-search');\n      if (ctrl.$animate && ctrl.$animate.enabled(container[0])) {\n        var animateHandler = function(elem, phase) {\n          if (phase === 'start' && ctrl.items.length === 0) {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('removeClass', searchInput[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          } else if (phase === 'close') {\n            // Only focus input after the animation has finished\n            ctrl.$animate.off('enter', container[0], animateHandler);\n            $timeout(function () {\n              ctrl.focusSearchInput(initSearchValue);\n            });\n          }\n        };\n\n        if (ctrl.items.length > 0) {\n          ctrl.$animate.on('enter', container[0], animateHandler);\n        } else {\n          ctrl.$animate.on('removeClass', searchInput[0], animateHandler);\n        }\n      } else {\n        $timeout(function () {\n          ctrl.focusSearchInput(initSearchValue);\n          if(!ctrl.tagging.isActivated && ctrl.items.length > 1) {\n            _ensureHighlightVisible();\n          }\n        });\n      }\n    }\n  };\n\n  ctrl.focusSearchInput = function () {\n    ctrl.search = ctrl.search;\n    ctrl.searchInput[0].focus();\n  };\n\n  ctrl.findGroupByName = function(name) {\n    return ctrl.groups && ctrl.groups.filter(function(group) {\n      return group.name === name;\n    })[0];\n  };\n\n  ctrl.parseRepeatAttr = function(repeatAttr, groupByExp, groupFilterExp) {\n    function updateGroups(items) {\n      var groupFn = $scope.$eval(groupByExp);\n      ctrl.groups = [];\n      angular.forEach(items, function(item) {\n        var groupName = angular.isFunction(groupFn) ? groupFn(item) : item[groupFn];\n        var group = ctrl.findGroupByName(groupName);\n        if(group) {\n          group.items.push(item);\n        }\n        else {\n          ctrl.groups.push({name: groupName, items: [item]});\n        }\n      });\n      if(groupFilterExp){\n        var groupFilterFn = $scope.$eval(groupFilterExp);\n        if( angular.isFunction(groupFilterFn)){\n          ctrl.groups = groupFilterFn(ctrl.groups);\n        } else if(angular.isArray(groupFilterFn)){\n          ctrl.groups = _groupsFilter(ctrl.groups, groupFilterFn);\n        }\n      }\n      ctrl.items = [];\n      ctrl.groups.forEach(function(group) {\n        ctrl.items = ctrl.items.concat(group.items);\n      });\n    }\n\n    function setPlainItems(items) {\n      ctrl.items = items;\n    }\n\n    ctrl.setItemsFn = groupByExp ? updateGroups : setPlainItems;\n\n    ctrl.parserResult = RepeatParser.parse(repeatAttr);\n\n    ctrl.isGrouped = !!groupByExp;\n    ctrl.itemProperty = ctrl.parserResult.itemName;\n\n    //If collection is an Object, convert it to Array\n\n    var originalSource = ctrl.parserResult.source;\n\n    //When an object is used as source, we better create an array and use it as 'source'\n    var createArrayFromObject = function(){\n      var origSrc = originalSource($scope);\n      $scope.$uisSource = Object.keys(origSrc).map(function(v){\n        var result = {};\n        result[ctrl.parserResult.keyName] = v;\n        result.value = origSrc[v];\n        return result;\n      });\n    };\n\n    if (ctrl.parserResult.keyName){ // Check for (key,value) syntax\n      createArrayFromObject();\n      ctrl.parserResult.source = $parse('$uisSource' + ctrl.parserResult.filters);\n      $scope.$watch(originalSource, function(newVal, oldVal){\n        if (newVal !== oldVal) createArrayFromObject();\n      }, true);\n    }\n\n    ctrl.refreshItems = function (data){\n      data = data || ctrl.parserResult.source($scope);\n      var selectedItems = ctrl.selected;\n      //TODO should implement for single mode removeSelected\n      if (ctrl.isEmpty() || (angular.isArray(selectedItems) && !selectedItems.length) || !ctrl.removeSelected) {\n        ctrl.setItemsFn(data);\n      }else{\n        if ( data !== undefined ) {\n          var filteredItems = data.filter(function(i) {\n            return selectedItems.every(function(selectedItem) {\n              return !angular.equals(i, selectedItem);\n            });\n          });\n          ctrl.setItemsFn(filteredItems);\n        }\n      }\n      if (ctrl.dropdownPosition === 'auto' || ctrl.dropdownPosition === 'up'){\n        $scope.calculateDropdownPos();\n      }\n    };\n\n    // See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L259\n    $scope.$watchCollection(ctrl.parserResult.source, function(items) {\n      if (items === undefined || items === null) {\n        // If the user specifies undefined or null => reset the collection\n        // Special case: items can be undefined if the user did not initialized the collection on the scope\n        // i.e $scope.addresses = [] is missing\n        ctrl.items = [];\n      } else {\n        if (!angular.isArray(items)) {\n          throw uiSelectMinErr('items', \"Expected an array but got '{0}'.\", items);\n        } else {\n          //Remove already selected items (ex: while searching)\n          //TODO Should add a test\n          ctrl.refreshItems(items);\n\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ctrl.ngModel.$modelValue)) {\n            ctrl.ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n        }\n      }\n    });\n\n  };\n\n  var _refreshDelayPromise;\n\n  /**\n   * Typeahead mode: lets the user refresh the collection using his own function.\n   *\n   * See Expose $select.search for external / remote filtering https://github.com/angular-ui/ui-select/pull/31\n   */\n  ctrl.refresh = function(refreshAttr) {\n    if (refreshAttr !== undefined) {\n\n      // Debounce\n      // See https://github.com/angular-ui/bootstrap/blob/0.10.0/src/typeahead/typeahead.js#L155\n      // FYI AngularStrap typeahead does not have debouncing: https://github.com/mgcrea/angular-strap/blob/v2.0.0-rc.4/src/typeahead/typeahead.js#L177\n      if (_refreshDelayPromise) {\n        $timeout.cancel(_refreshDelayPromise);\n      }\n      _refreshDelayPromise = $timeout(function() {\n        $scope.$eval(refreshAttr);\n      }, ctrl.refreshDelay);\n    }\n  };\n\n  ctrl.isActive = function(itemScope) {\n    if ( !ctrl.open ) {\n      return false;\n    }\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isActive =  itemIndex == ctrl.activeIndex;\n\n    if ( !isActive || ( itemIndex < 0 && ctrl.taggingLabel !== false ) ||( itemIndex < 0 && ctrl.taggingLabel === false) ) {\n      return false;\n    }\n\n    if (isActive && !angular.isUndefined(ctrl.onHighlightCallback)) {\n      itemScope.$eval(ctrl.onHighlightCallback);\n    }\n\n    return isActive;\n  };\n\n  ctrl.isDisabled = function(itemScope) {\n\n    if (!ctrl.open) return;\n\n    var itemIndex = ctrl.items.indexOf(itemScope[ctrl.itemProperty]);\n    var isDisabled = false;\n    var item;\n\n    if (itemIndex >= 0 && !angular.isUndefined(ctrl.disableChoiceExpression)) {\n      item = ctrl.items[itemIndex];\n      isDisabled = !!(itemScope.$eval(ctrl.disableChoiceExpression)); // force the boolean value\n      item._uiSelectChoiceDisabled = isDisabled; // store this for later reference\n    }\n\n    return isDisabled;\n  };\n\n\n  // When the user selects an item with ENTER or clicks the dropdown\n  ctrl.select = function(item, skipFocusser, $event) {\n    if (item === undefined || !item._uiSelectChoiceDisabled) {\n\n      if ( ! ctrl.items && ! ctrl.search && ! ctrl.tagging.isActivated) return;\n\n      if (!item || !item._uiSelectChoiceDisabled) {\n        if(ctrl.tagging.isActivated) {\n          // if taggingLabel is disabled, we pull from ctrl.search val\n          if ( ctrl.taggingLabel === false ) {\n            if ( ctrl.activeIndex < 0 ) {\n              item = ctrl.tagging.fct !== undefined ? ctrl.tagging.fct(ctrl.search) : ctrl.search;\n              if (!item || angular.equals( ctrl.items[0], item ) ) {\n                return;\n              }\n            } else {\n              // keyboard nav happened first, user selected from dropdown\n              item = ctrl.items[ctrl.activeIndex];\n            }\n          } else {\n            // tagging always operates at index zero, taggingLabel === false pushes\n            // the ctrl.search value without having it injected\n            if ( ctrl.activeIndex === 0 ) {\n              // ctrl.tagging pushes items to ctrl.items, so we only have empty val\n              // for `item` if it is a detected duplicate\n              if ( item === undefined ) return;\n\n              // create new item on the fly if we don't already have one;\n              // use tagging function if we have one\n              if ( ctrl.tagging.fct !== undefined && typeof item === 'string' ) {\n                item = ctrl.tagging.fct(item);\n                if (!item) return;\n              // if item type is 'string', apply the tagging label\n              } else if ( typeof item === 'string' ) {\n                // trim the trailing space\n                item = item.replace(ctrl.taggingLabel,'').trim();\n              }\n            }\n          }\n          // search ctrl.selected for dupes potentially caused by tagging and return early if found\n          if ( ctrl.selected && angular.isArray(ctrl.selected) && ctrl.selected.filter( function (selection) { return angular.equals(selection, item); }).length > 0 ) {\n            ctrl.close(skipFocusser);\n            return;\n          }\n        }\n\n        $scope.$broadcast('uis:select', item);\n\n        var locals = {};\n        locals[ctrl.parserResult.itemName] = item;\n\n        $timeout(function(){\n          ctrl.onSelectCallback($scope, {\n            $item: item,\n            $model: ctrl.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        if (ctrl.closeOnSelect) {\n          ctrl.close(skipFocusser);\n        }\n        if ($event && $event.type === 'click') {\n          ctrl.clickTriggeredSelect = true;\n        }\n      }\n    }\n  };\n\n  // Closes the dropdown\n  ctrl.close = function(skipFocusser) {\n    if (!ctrl.open) return;\n    if (ctrl.ngModel && ctrl.ngModel.$setTouched) ctrl.ngModel.$setTouched();\n    _resetSearchInput();\n    ctrl.open = false;\n\n    $scope.$broadcast('uis:close', skipFocusser);\n\n  };\n\n  ctrl.setFocus = function(){\n    if (!ctrl.focus) ctrl.focusInput[0].focus();\n  };\n\n  ctrl.clear = function($event) {\n    ctrl.select(undefined);\n    $event.stopPropagation();\n    $timeout(function() {\n      ctrl.focusser[0].focus();\n    }, 0, false);\n  };\n\n  // Toggle dropdown\n  ctrl.toggle = function(e) {\n    if (ctrl.open) {\n      ctrl.close();\n      e.preventDefault();\n      e.stopPropagation();\n    } else {\n      ctrl.activate();\n    }\n  };\n\n  ctrl.isLocked = function(itemScope, itemIndex) {\n      var isLocked, item = ctrl.selected[itemIndex];\n\n      if (item && !angular.isUndefined(ctrl.lockChoiceExpression)) {\n          isLocked = !!(itemScope.$eval(ctrl.lockChoiceExpression)); // force the boolean value\n          item._uiSelectChoiceLocked = isLocked; // store this for later reference\n      }\n\n      return isLocked;\n  };\n\n  var sizeWatch = null;\n  var updaterScheduled = false;\n  ctrl.sizeSearchInput = function() {\n\n    var input = ctrl.searchInput[0],\n        container = ctrl.searchInput.parent().parent()[0],\n        calculateContainerWidth = function() {\n          // Return the container width only if the search input is visible\n          return container.clientWidth * !!input.offsetParent;\n        },\n        updateIfVisible = function(containerWidth) {\n          if (containerWidth === 0) {\n            return false;\n          }\n          var inputWidth = containerWidth - input.offsetLeft - 10;\n          if (inputWidth < 50) inputWidth = containerWidth;\n          ctrl.searchInput.css('width', inputWidth+'px');\n          return true;\n        };\n\n    ctrl.searchInput.css('width', '10px');\n    $timeout(function() { //Give tags time to render correctly\n      if (sizeWatch === null && !updateIfVisible(calculateContainerWidth())) {\n        sizeWatch = $scope.$watch(angular.noop, function() {\n          if (!updaterScheduled) {\n            updaterScheduled = true;\n            $scope.$$postDigest(function() {\n              updaterScheduled = false;\n              if (updateIfVisible(calculateContainerWidth())) {\n                sizeWatch();\n                sizeWatch = null;\n              }\n            });\n          }\n        });\n      }\n    });\n  };\n\n  function _handleDropDownSelection(key) {\n    var processed = true;\n    switch (key) {\n      case KEY.DOWN:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex < ctrl.items.length - 1) { ctrl.activeIndex++; }\n        break;\n      case KEY.UP:\n        if (!ctrl.open && ctrl.multiple) ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        else if (ctrl.activeIndex > 0 || (ctrl.search.length === 0 && ctrl.tagging.isActivated && ctrl.activeIndex > -1)) { ctrl.activeIndex--; }\n        break;\n      case KEY.TAB:\n        if (!ctrl.multiple || ctrl.open) ctrl.select(ctrl.items[ctrl.activeIndex], true);\n        break;\n      case KEY.ENTER:\n        if(ctrl.open && (ctrl.tagging.isActivated || ctrl.activeIndex >= 0)){\n          ctrl.select(ctrl.items[ctrl.activeIndex], ctrl.skipFocusser); // Make sure at least one dropdown item is highlighted before adding if not in tagging mode\n        } else {\n          ctrl.activate(false, true); //In case its the search input in 'multiple' mode\n        }\n        break;\n      case KEY.ESC:\n        ctrl.close();\n        break;\n      default:\n        processed = false;\n    }\n    return processed;\n  }\n\n  // Bind to keyboard shortcuts\n  ctrl.searchInput.on('keydown', function(e) {\n\n    var key = e.which;\n\n    if (~[KEY.ENTER,KEY.ESC].indexOf(key)){\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n    // if(~[KEY.ESC,KEY.TAB].indexOf(key)){\n    //   //TODO: SEGURO?\n    //   ctrl.close();\n    // }\n\n    $scope.$apply(function() {\n\n      var tagged = false;\n\n      if (ctrl.items.length > 0 || ctrl.tagging.isActivated) {\n        _handleDropDownSelection(key);\n        if ( ctrl.taggingTokens.isActivated ) {\n          for (var i = 0; i < ctrl.taggingTokens.tokens.length; i++) {\n            if ( ctrl.taggingTokens.tokens[i] === KEY.MAP[e.keyCode] ) {\n              // make sure there is a new value to push via tagging\n              if ( ctrl.search.length > 0 ) {\n                tagged = true;\n              }\n            }\n          }\n          if ( tagged ) {\n            $timeout(function() {\n              ctrl.searchInput.triggerHandler('tagged');\n              var newItem = ctrl.search.replace(KEY.MAP[e.keyCode],'').trim();\n              if ( ctrl.tagging.fct ) {\n                newItem = ctrl.tagging.fct( newItem );\n              }\n              if (newItem) ctrl.select(newItem, true);\n            });\n          }\n        }\n      }\n\n    });\n\n    if(KEY.isVerticalMovement(key) && ctrl.items.length > 0){\n      _ensureHighlightVisible();\n    }\n\n    if (key === KEY.ENTER || key === KEY.ESC) {\n      e.preventDefault();\n      e.stopPropagation();\n    }\n\n  });\n\n  ctrl.searchInput.on('paste', function (e) {\n    var data;\n\n    if (window.clipboardData && window.clipboardData.getData) { // IE\n      data = window.clipboardData.getData('Text');\n    } else {\n      data = (e.originalEvent || e).clipboardData.getData('text/plain');\n    }\n\n    // Prepend the current input field text to the paste buffer.\n    data = ctrl.search + data;\n\n    if (data && data.length > 0) {\n      // If tagging try to split by tokens and add items\n      if (ctrl.taggingTokens.isActivated) {\n        var separator = KEY.toSeparator(ctrl.taggingTokens.tokens[0]);\n        var items = data.split(separator || ctrl.taggingTokens.tokens[0]); // split by first token only\n        if (items && items.length > 0) {\n        var oldsearch = ctrl.search;\n          angular.forEach(items, function (item) {\n            var newItem = ctrl.tagging.fct ? ctrl.tagging.fct(item) : item;\n            if (newItem) {\n              ctrl.select(newItem, true);\n            }\n          });\n          ctrl.search = oldsearch || EMPTY_SEARCH;\n          e.preventDefault();\n          e.stopPropagation();\n        }\n      } else if (ctrl.paste) {\n        ctrl.paste(data);\n        ctrl.search = EMPTY_SEARCH;\n        e.preventDefault();\n        e.stopPropagation();\n      }\n    }\n  });\n\n  ctrl.searchInput.on('tagged', function() {\n    $timeout(function() {\n      _resetSearchInput();\n    });\n  });\n\n  // See https://github.com/ivaynberg/select2/blob/3.4.6/select2.js#L1431\n  function _ensureHighlightVisible() {\n    var container = $element.querySelectorAll('.ui-select-choices-content');\n    var choices = container.querySelectorAll('.ui-select-choices-row');\n    if (choices.length < 1) {\n      throw uiSelectMinErr('choices', \"Expected multiple .ui-select-choices-row but got '{0}'.\", choices.length);\n    }\n\n    if (ctrl.activeIndex < 0) {\n      return;\n    }\n\n    var highlighted = choices[ctrl.activeIndex];\n    var posY = highlighted.offsetTop + highlighted.clientHeight - container[0].scrollTop;\n    var height = container[0].offsetHeight;\n\n    if (posY > height) {\n      container[0].scrollTop += posY - height;\n    } else if (posY < highlighted.clientHeight) {\n      if (ctrl.isGrouped && ctrl.activeIndex === 0)\n        container[0].scrollTop = 0; //To make group header visible when going all the way up\n      else\n        container[0].scrollTop -= highlighted.clientHeight - posY;\n    }\n  }\n\n  var onResize = $$uisDebounce(function() {\n    ctrl.sizeSearchInput();\n  }, 50);\n\n  angular.element($window).bind('resize', onResize);\n\n  $scope.$on('$destroy', function() {\n    ctrl.searchInput.off('keyup keydown tagged blur paste');\n    angular.element($window).off('resize', onResize);\n  });\n}]);\n\nuis.directive('uiSelect',\n  ['$document', 'uiSelectConfig', 'uiSelectMinErr', 'uisOffset', '$compile', '$parse', '$timeout',\n  function($document, uiSelectConfig, uiSelectMinErr, uisOffset, $compile, $parse, $timeout) {\n\n  return {\n    restrict: 'EA',\n    templateUrl: function(tElement, tAttrs) {\n      var theme = tAttrs.theme || uiSelectConfig.theme;\n      return theme + (angular.isDefined(tAttrs.multiple) ? '/select-multiple.tpl.html' : '/select.tpl.html');\n    },\n    replace: true,\n    transclude: true,\n    require: ['uiSelect', '^ngModel'],\n    scope: true,\n\n    controller: 'uiSelectCtrl',\n    controllerAs: '$select',\n    compile: function(tElement, tAttrs) {\n\n      // Allow setting ngClass on uiSelect\n      var match = /{(.*)}\\s*{(.*)}/.exec(tAttrs.ngClass);\n      if(match) {\n        var combined = '{'+ match[1] +', '+ match[2] +'}';\n        tAttrs.ngClass = combined;\n        tElement.attr('ng-class', combined);\n      }\n\n      //Multiple or Single depending if multiple attribute presence\n      if (angular.isDefined(tAttrs.multiple))\n        tElement.append('<ui-select-multiple/>').removeAttr('multiple');\n      else\n        tElement.append('<ui-select-single/>');\n\n      if (tAttrs.inputId)\n        tElement.querySelectorAll('input.ui-select-search')[0].id = tAttrs.inputId;\n\n      return function(scope, element, attrs, ctrls, transcludeFn) {\n\n        var $select = ctrls[0];\n        var ngModel = ctrls[1];\n\n        $select.generatedId = uiSelectConfig.generateId();\n        $select.baseTitle = attrs.title || 'Select box';\n        $select.focusserTitle = $select.baseTitle + ' focus';\n        $select.focusserId = 'focusser-' + $select.generatedId;\n\n        $select.closeOnSelect = function() {\n          if (angular.isDefined(attrs.closeOnSelect)) {\n            return $parse(attrs.closeOnSelect)();\n          } else {\n            return uiSelectConfig.closeOnSelect;\n          }\n        }();\n\n        scope.$watch('skipFocusser', function() {\n            var skipFocusser = scope.$eval(attrs.skipFocusser);\n            $select.skipFocusser = skipFocusser !== undefined ? skipFocusser : uiSelectConfig.skipFocusser;\n        });\n\n        $select.onSelectCallback = $parse(attrs.onSelect);\n        $select.onRemoveCallback = $parse(attrs.onRemove);\n\n        //Limit the number of selections allowed\n        $select.limit = (angular.isDefined(attrs.limit)) ? parseInt(attrs.limit, 10) : undefined;\n\n        //Set reference to ngModel from uiSelectCtrl\n        $select.ngModel = ngModel;\n\n        $select.choiceGrouped = function(group){\n          return $select.isGrouped && group && group.name;\n        };\n\n        if(attrs.tabindex){\n          attrs.$observe('tabindex', function(value) {\n            $select.focusInput.attr('tabindex', value);\n            element.removeAttr('tabindex');\n          });\n        }\n\n        scope.$watch('searchEnabled', function() {\n            var searchEnabled = scope.$eval(attrs.searchEnabled);\n            $select.searchEnabled = searchEnabled !== undefined ? searchEnabled : uiSelectConfig.searchEnabled;\n        });\n\n        scope.$watch('sortable', function() {\n            var sortable = scope.$eval(attrs.sortable);\n            $select.sortable = sortable !== undefined ? sortable : uiSelectConfig.sortable;\n        });\n\n        attrs.$observe('disabled', function() {\n          // No need to use $eval() (thanks to ng-disabled) since we already get a boolean instead of a string\n          $select.disabled = attrs.disabled !== undefined ? attrs.disabled : false;\n        });\n\n        attrs.$observe('resetSearchInput', function() {\n          // $eval() is needed otherwise we get a string instead of a boolean\n          var resetSearchInput = scope.$eval(attrs.resetSearchInput);\n          $select.resetSearchInput = resetSearchInput !== undefined ? resetSearchInput : true;\n        });\n\n        attrs.$observe('paste', function() {\n          $select.paste = scope.$eval(attrs.paste);\n        });\n\n        attrs.$observe('tagging', function() {\n          if(attrs.tagging !== undefined)\n          {\n            // $eval() is needed otherwise we get a string instead of a boolean\n            var taggingEval = scope.$eval(attrs.tagging);\n            $select.tagging = {isActivated: true, fct: taggingEval !== true ? taggingEval : undefined};\n          }\n          else\n          {\n            $select.tagging = {isActivated: false, fct: undefined};\n          }\n        });\n\n        attrs.$observe('taggingLabel', function() {\n          if(attrs.tagging !== undefined )\n          {\n            // check eval for FALSE, in this case, we disable the labels\n            // associated with tagging\n            if ( attrs.taggingLabel === 'false' ) {\n              $select.taggingLabel = false;\n            }\n            else\n            {\n              $select.taggingLabel = attrs.taggingLabel !== undefined ? attrs.taggingLabel : '(new)';\n            }\n          }\n        });\n\n        attrs.$observe('taggingTokens', function() {\n          if (attrs.tagging !== undefined) {\n            var tokens = attrs.taggingTokens !== undefined ? attrs.taggingTokens.split('|') : [',','ENTER'];\n            $select.taggingTokens = {isActivated: true, tokens: tokens };\n          }\n        });\n\n        //Automatically gets focus when loaded\n        if (angular.isDefined(attrs.autofocus)){\n          $timeout(function(){\n            $select.setFocus();\n          });\n        }\n\n        //Gets focus based on scope event name (e.g. focus-on='SomeEventName')\n        if (angular.isDefined(attrs.focusOn)){\n          scope.$on(attrs.focusOn, function() {\n              $timeout(function(){\n                $select.setFocus();\n              });\n          });\n        }\n\n        function onDocumentClick(e) {\n          if (!$select.open) return; //Skip it if dropdown is close\n\n          var contains = false;\n\n          if (window.jQuery) {\n            // Firefox 3.6 does not support element.contains()\n            // See Node.contains https://developer.mozilla.org/en-US/docs/Web/API/Node.contains\n            contains = window.jQuery.contains(element[0], e.target);\n          } else {\n            contains = element[0].contains(e.target);\n          }\n\n          if (!contains && !$select.clickTriggeredSelect) {\n            var skipFocusser;\n            if (!$select.skipFocusser) {\n              //Will lose focus only with certain targets\n              var focusableControls = ['input','button','textarea','select'];\n              var targetController = angular.element(e.target).controller('uiSelect'); //To check if target is other ui-select\n              skipFocusser = targetController && targetController !== $select; //To check if target is other ui-select\n              if (!skipFocusser) skipFocusser =  ~focusableControls.indexOf(e.target.tagName.toLowerCase()); //Check if target is input, button or textarea\n            } else {\n              skipFocusser = true;\n            }\n            $select.close(skipFocusser);\n            scope.$digest();\n          }\n          $select.clickTriggeredSelect = false;\n        }\n\n        // See Click everywhere but here event http://stackoverflow.com/questions/12931369\n        $document.on('click', onDocumentClick);\n\n        scope.$on('$destroy', function() {\n          $document.off('click', onDocumentClick);\n        });\n\n        // Move transcluded elements to their correct position in main template\n        transcludeFn(scope, function(clone) {\n          // See Transclude in AngularJS http://blog.omkarpatil.com/2012/11/transclude-in-angularjs.html\n\n          // One day jqLite will be replaced by jQuery and we will be able to write:\n          // var transcludedElement = clone.filter('.my-class')\n          // instead of creating a hackish DOM element:\n          var transcluded = angular.element('<div>').append(clone);\n\n          var transcludedMatch = transcluded.querySelectorAll('.ui-select-match');\n          transcludedMatch.removeAttr('ui-select-match'); //To avoid loop in case directive as attr\n          transcludedMatch.removeAttr('data-ui-select-match'); // Properly handle HTML5 data-attributes\n          if (transcludedMatch.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-match but got '{0}'.\", transcludedMatch.length);\n          }\n          element.querySelectorAll('.ui-select-match').replaceWith(transcludedMatch);\n\n          var transcludedChoices = transcluded.querySelectorAll('.ui-select-choices');\n          transcludedChoices.removeAttr('ui-select-choices'); //To avoid loop in case directive as attr\n          transcludedChoices.removeAttr('data-ui-select-choices'); // Properly handle HTML5 data-attributes\n          if (transcludedChoices.length !== 1) {\n            throw uiSelectMinErr('transcluded', \"Expected 1 .ui-select-choices but got '{0}'.\", transcludedChoices.length);\n          }\n          element.querySelectorAll('.ui-select-choices').replaceWith(transcludedChoices);\n\n          var transcludedNoChoice = transcluded.querySelectorAll('.ui-select-no-choice');\n          transcludedNoChoice.removeAttr('ui-select-no-choice'); //To avoid loop in case directive as attr\n          transcludedNoChoice.removeAttr('data-ui-select-no-choice'); // Properly handle HTML5 data-attributes\n          if (transcludedNoChoice.length == 1) {\n            element.querySelectorAll('.ui-select-no-choice').replaceWith(transcludedNoChoice);\n          }\n        });\n\n        // Support for appending the select field to the body when its open\n        var appendToBody = scope.$eval(attrs.appendToBody);\n        if (appendToBody !== undefined ? appendToBody : uiSelectConfig.appendToBody) {\n          scope.$watch('$select.open', function(isOpen) {\n            if (isOpen) {\n              positionDropdown();\n            } else {\n              resetDropdown();\n            }\n          });\n\n          // Move the dropdown back to its original location when the scope is destroyed. Otherwise\n          // it might stick around when the user routes away or the select field is otherwise removed\n          scope.$on('$destroy', function() {\n            resetDropdown();\n          });\n        }\n\n        // Hold on to a reference to the .ui-select-container element for appendToBody support\n        var placeholder = null,\n            originalWidth = '';\n\n        function positionDropdown() {\n          // Remember the absolute position of the element\n          var offset = uisOffset(element);\n\n          // Clone the element into a placeholder element to take its original place in the DOM\n          placeholder = angular.element('<div class=\"ui-select-placeholder\"></div>');\n          placeholder[0].style.width = offset.width + 'px';\n          placeholder[0].style.height = offset.height + 'px';\n          element.after(placeholder);\n\n          // Remember the original value of the element width inline style, so it can be restored\n          // when the dropdown is closed\n          originalWidth = element[0].style.width;\n\n          // Now move the actual dropdown element to the end of the body\n          $document.find('body').append(element);\n\n          element[0].style.position = 'absolute';\n          element[0].style.left = offset.left + 'px';\n          element[0].style.top = offset.top + 'px';\n          element[0].style.width = offset.width + 'px';\n        }\n\n        function resetDropdown() {\n          if (placeholder === null) {\n            // The dropdown has not actually been display yet, so there's nothing to reset\n            return;\n          }\n\n          // Move the dropdown element back to its original location in the DOM\n          placeholder.replaceWith(element);\n          placeholder = null;\n\n          element[0].style.position = '';\n          element[0].style.left = '';\n          element[0].style.top = '';\n          element[0].style.width = originalWidth;\n\n          // Set focus back on to the moved element\n          $select.setFocus();\n        }\n\n        // Hold on to a reference to the .ui-select-dropdown element for direction support.\n        var dropdown = null,\n            directionUpClassName = 'direction-up';\n\n        // Support changing the direction of the dropdown if there isn't enough space to render it.\n        scope.$watch('$select.open', function() {\n\n          if ($select.dropdownPosition === 'auto' || $select.dropdownPosition === 'up'){\n            scope.calculateDropdownPos();\n          }\n\n        });\n\n        var setDropdownPosUp = function(offset, offsetDropdown){\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = 'absolute';\n          dropdown[0].style.top = (offsetDropdown.height * -1) + 'px';\n          element.addClass(directionUpClassName);\n\n        };\n\n        var setDropdownPosDown = function(offset, offsetDropdown){\n\n          element.removeClass(directionUpClassName);\n\n          offset = offset || uisOffset(element);\n          offsetDropdown = offsetDropdown || uisOffset(dropdown);\n\n          dropdown[0].style.position = '';\n          dropdown[0].style.top = '';\n\n        };\n\n        scope.calculateDropdownPos = function(){\n\n          if ($select.open) {\n            dropdown = angular.element(element).querySelectorAll('.ui-select-dropdown');\n            if (dropdown.length === 0) {\n              return;\n            }\n\n            // Hide the dropdown so there is no flicker until $timeout is done executing.\n            dropdown[0].style.opacity = 0;\n\n            // Delay positioning the dropdown until all choices have been added so its height is correct.\n            $timeout(function(){\n\n              if ($select.dropdownPosition === 'up'){\n                  //Go UP\n                  setDropdownPosUp();\n\n              }else{ //AUTO\n\n                element.removeClass(directionUpClassName);\n\n                var offset = uisOffset(element);\n                var offsetDropdown = uisOffset(dropdown);\n\n                //https://code.google.com/p/chromium/issues/detail?id=342307#c4\n                var scrollTop = $document[0].documentElement.scrollTop || $document[0].body.scrollTop; //To make it cross browser (blink, webkit, IE, Firefox).\n\n                // Determine if the direction of the dropdown needs to be changed.\n                if (offset.top + offset.height + offsetDropdown.height > scrollTop + $document[0].documentElement.clientHeight) {\n                  //Go UP\n                  setDropdownPosUp(offset, offsetDropdown);\n                }else{\n                  //Go DOWN\n                  setDropdownPosDown(offset, offsetDropdown);\n                }\n\n              }\n\n              // Display the dropdown once it has been positioned.\n              dropdown[0].style.opacity = 1;\n            });\n          } else {\n              if (dropdown === null || dropdown.length === 0) {\n                return;\n              }\n\n              // Reset the position of the dropdown.\n              dropdown[0].style.position = '';\n              dropdown[0].style.top = '';\n              element.removeClass(directionUpClassName);\n          }\n        };\n      };\n    }\n  };\n}]);\n\nuis.directive('uiSelectMatch', ['uiSelectConfig', function(uiSelectConfig) {\n  return {\n    restrict: 'EA',\n    require: '^uiSelect',\n    replace: true,\n    transclude: true,\n    templateUrl: function(tElement) {\n      // Needed so the uiSelect can detect the transcluded content\n      tElement.addClass('ui-select-match');\n\n      var parent = tElement.parent();\n      // Gets theme attribute from parent (ui-select)\n      var theme = getAttribute(parent, 'theme') || uiSelectConfig.theme;\n      var multi = angular.isDefined(getAttribute(parent, 'multiple'));\n\n      return theme + (multi ? '/match-multiple.tpl.html' : '/match.tpl.html');      \n    },\n    link: function(scope, element, attrs, $select) {\n      $select.lockChoiceExpression = attrs.uiLockChoice;\n      attrs.$observe('placeholder', function(placeholder) {\n        $select.placeholder = placeholder !== undefined ? placeholder : uiSelectConfig.placeholder;\n      });\n\n      function setAllowClear(allow) {\n        $select.allowClear = (angular.isDefined(allow)) ? (allow === '') ? true : (allow.toLowerCase() === 'true') : false;\n      }\n\n      attrs.$observe('allowClear', setAllowClear);\n      setAllowClear(attrs.allowClear);\n\n      if($select.multiple){\n        $select.sizeSearchInput();\n      }\n\n    }\n  };\n\n  function getAttribute(elem, attribute) {\n    if (elem[0].hasAttribute(attribute))\n      return elem.attr(attribute);\n\n    if (elem[0].hasAttribute('data-' + attribute))\n      return elem.attr('data-' + attribute);\n\n    if (elem[0].hasAttribute('x-' + attribute))\n      return elem.attr('x-' + attribute);\n  }\n}]);\n\nuis.directive('uiSelectMultiple', ['uiSelectMinErr','$timeout', function(uiSelectMinErr, $timeout) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n\n    controller: ['$scope','$timeout', function($scope, $timeout){\n\n      var ctrl = this,\n          $select = $scope.$select,\n          ngModel;\n\n      if (angular.isUndefined($select.selected))\n        $select.selected = [];\n\n      //Wait for link fn to inject it\n      $scope.$evalAsync(function(){ ngModel = $scope.ngModel; });\n\n      ctrl.activeMatchIndex = -1;\n\n      ctrl.updateModel = function(){\n        ngModel.$setViewValue(Date.now()); //Set timestamp as a unique string to force changes\n        ctrl.refreshComponent();\n      };\n\n      ctrl.refreshComponent = function(){\n        //Remove already selected items\n        //e.g. When user clicks on a selection, the selected array changes and\n        //the dropdown should remove that item\n        $select.refreshItems();\n        $select.sizeSearchInput();\n      };\n\n      // Remove item from multiple select\n      ctrl.removeChoice = function(index){\n\n        var removedChoice = $select.selected[index];\n\n        // if the choice is locked, can't remove it\n        if(removedChoice._uiSelectChoiceLocked) return;\n\n        var locals = {};\n        locals[$select.parserResult.itemName] = removedChoice;\n\n        $select.selected.splice(index, 1);\n        ctrl.activeMatchIndex = -1;\n        $select.sizeSearchInput();\n\n        // Give some time for scope propagation.\n        $timeout(function(){\n          $select.onRemoveCallback($scope, {\n            $item: removedChoice,\n            $model: $select.parserResult.modelMapper($scope, locals)\n          });\n        });\n\n        ctrl.updateModel();\n\n      };\n\n      ctrl.getPlaceholder = function(){\n        //Refactor single?\n        if($select.selected && $select.selected.length) return;\n        return $select.placeholder;\n      };\n\n\n    }],\n    controllerAs: '$selectMultiple',\n\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = scope.ngModel = ctrls[1];\n      var $selectMultiple = scope.$selectMultiple;\n\n      //$select.selected = raw selected objects (ignoring any property binding)\n\n      $select.multiple = true;\n      $select.removeSelected = true;\n\n      //Input that will handle focus\n      $select.focusInput = $select.searchInput;\n\n      //Properly check for empty if set to multiple\n      ngModel.$isEmpty = function(value) {\n        return !value || value.length === 0;\n      };\n\n      //From view --> model\n      ngModel.$parsers.unshift(function () {\n        var locals = {},\n            result,\n            resultMultiple = [];\n        for (var j = $select.selected.length - 1; j >= 0; j--) {\n          locals = {};\n          locals[$select.parserResult.itemName] = $select.selected[j];\n          result = $select.parserResult.modelMapper(scope, locals);\n          resultMultiple.unshift(result);\n        }\n        return resultMultiple;\n      });\n\n      // From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (!data) return inputValue;\n        var resultMultiple = [];\n        var checkFnMultiple = function(list, value){\n          if (!list || !list.length) return;\n          for (var p = list.length - 1; p >= 0; p--) {\n            locals[$select.parserResult.itemName] = list[p];\n            result = $select.parserResult.modelMapper(scope, locals);\n            if($select.parserResult.trackByExp){\n                var propsItemNameMatches = /(\\w*)\\./.exec($select.parserResult.trackByExp);\n                var matches = /\\.([^\\s]+)/.exec($select.parserResult.trackByExp);\n                if(propsItemNameMatches && propsItemNameMatches.length > 0 && propsItemNameMatches[1] == $select.parserResult.itemName){\n                  if(matches && matches.length>0 && result[matches[1]] == value[matches[1]]){\n                      resultMultiple.unshift(list[p]);\n                      return true;\n                  }\n                }\n            }\n            if (angular.equals(result,value)){\n              resultMultiple.unshift(list[p]);\n              return true;\n            }\n          }\n          return false;\n        };\n        if (!inputValue) return resultMultiple; //If ngModel was undefined\n        for (var k = inputValue.length - 1; k >= 0; k--) {\n          //Check model array of currently selected items\n          if (!checkFnMultiple($select.selected, inputValue[k])){\n            //Check model array of all items available\n            if (!checkFnMultiple(data, inputValue[k])){\n              //If not found on previous lists, just add it directly to resultMultiple\n              resultMultiple.unshift(inputValue[k]);\n            }\n          }\n        }\n        return resultMultiple;\n      });\n\n      //Watch for external model changes\n      scope.$watchCollection(function(){ return ngModel.$modelValue; }, function(newValue, oldValue) {\n        if (oldValue != newValue){\n          //update the view value with fresh data from items, if there is a valid model value\n          if(angular.isDefined(ngModel.$modelValue)) {\n            ngModel.$modelValue = null; //Force scope model value and ngModel value to be out of sync to re-run formatters\n          }\n          $selectMultiple.refreshComponent();\n        }\n      });\n\n      ngModel.$render = function() {\n        // Make sure that model value is array\n        if(!angular.isArray(ngModel.$viewValue)){\n          // Have tolerance for null or undefined values\n          if(angular.isUndefined(ngModel.$viewValue) || ngModel.$viewValue === null){\n            $select.selected = [];\n          } else {\n            throw uiSelectMinErr('multiarr', \"Expected model value to be array but got '{0}'\", ngModel.$viewValue);\n          }\n        }\n        $select.selected = ngModel.$viewValue;\n        $selectMultiple.refreshComponent();\n        scope.$evalAsync(); //To force $digest\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        if($select.selected.length >= $select.limit) {\n          return;\n        }\n        $select.selected.push(item);\n        $selectMultiple.updateModel();\n      });\n\n      scope.$on('uis:activate', function () {\n        $selectMultiple.activeMatchIndex = -1;\n      });\n\n      scope.$watch('$select.disabled', function(newValue, oldValue) {\n        // As the search input field may now become visible, it may be necessary to recompute its size\n        if (oldValue && !newValue) $select.sizeSearchInput();\n      });\n\n      $select.searchInput.on('keydown', function(e) {\n        var key = e.which;\n        scope.$apply(function() {\n          var processed = false;\n          // var tagged = false; //Checkme\n          if(KEY.isHorizontalMovement(key)){\n            processed = _handleMatchSelection(key);\n          }\n          if (processed  && key != KEY.TAB) {\n            //TODO Check si el tab selecciona aun correctamente\n            //Crear test\n            e.preventDefault();\n            e.stopPropagation();\n          }\n        });\n      });\n      function _getCaretPosition(el) {\n        if(angular.isNumber(el.selectionStart)) return el.selectionStart;\n        // selectionStart is not supported in IE8 and we don't want hacky workarounds so we compromise\n        else return el.value.length;\n      }\n      // Handles selected options in \"multiple\" mode\n      function _handleMatchSelection(key){\n        var caretPosition = _getCaretPosition($select.searchInput[0]),\n            length = $select.selected.length,\n            // none  = -1,\n            first = 0,\n            last  = length-1,\n            curr  = $selectMultiple.activeMatchIndex,\n            next  = $selectMultiple.activeMatchIndex+1,\n            prev  = $selectMultiple.activeMatchIndex-1,\n            newIndex = curr;\n\n        if(caretPosition > 0 || ($select.search.length && key == KEY.RIGHT)) return false;\n\n        $select.close();\n\n        function getNewActiveMatchIndex(){\n          switch(key){\n            case KEY.LEFT:\n              // Select previous/first item\n              if(~$selectMultiple.activeMatchIndex) return prev;\n              // Select last item\n              else return last;\n              break;\n            case KEY.RIGHT:\n              // Open drop-down\n              if(!~$selectMultiple.activeMatchIndex || curr === last){\n                $select.activate();\n                return false;\n              }\n              // Select next/last item\n              else return next;\n              break;\n            case KEY.BACKSPACE:\n              // Remove selected item and select previous/first\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice(curr);\n                return prev;\n              }\n              // Select last item\n              else return last;\n              break;\n            case KEY.DELETE:\n              // Remove selected item and select next item\n              if(~$selectMultiple.activeMatchIndex){\n                $selectMultiple.removeChoice($selectMultiple.activeMatchIndex);\n                return curr;\n              }\n              else return false;\n          }\n        }\n\n        newIndex = getNewActiveMatchIndex();\n\n        if(!$select.selected.length || newIndex === false) $selectMultiple.activeMatchIndex = -1;\n        else $selectMultiple.activeMatchIndex = Math.min(last,Math.max(first,newIndex));\n\n        return true;\n      }\n\n      $select.searchInput.on('keyup', function(e) {\n\n        if ( ! KEY.isVerticalMovement(e.which) ) {\n          scope.$evalAsync( function () {\n            $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          });\n        }\n        // Push a \"create new\" item into array if there is a search string\n        if ( $select.tagging.isActivated && $select.search.length > 0 ) {\n\n          // return early with these keys\n          if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || KEY.isVerticalMovement(e.which) ) {\n            return;\n          }\n          // always reset the activeIndex to the first item when tagging\n          $select.activeIndex = $select.taggingLabel === false ? -1 : 0;\n          // taggingLabel === false bypasses all of this\n          if ($select.taggingLabel === false) return;\n\n          var items = angular.copy( $select.items );\n          var stashArr = angular.copy( $select.items );\n          var newItem;\n          var item;\n          var hasTag = false;\n          var dupeIndex = -1;\n          var tagItems;\n          var tagItem;\n\n          // case for object tagging via transform `$select.tagging.fct` function\n          if ( $select.tagging.fct !== undefined) {\n            tagItems = $select.$filter('filter')(items,{'isTag': true});\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            // remove the first element, if it has the `isTag` prop we generate a new one with each keyup, shaving the previous\n            if ( items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.tagging.fct($select.search);\n            // verify the new tag doesn't match the value of a possible selection choice or an already selected item.\n            if (\n              stashArr.some(function (origItem) {\n                 return angular.equals(origItem, newItem);\n              }) ||\n              $select.selected.some(function (origItem) {\n                return angular.equals(origItem, newItem);\n              })\n            ) {\n              scope.$evalAsync(function () {\n                $select.activeIndex = 0;\n                $select.items = items;\n              });\n              return;\n            }\n            if (newItem) newItem.isTag = true;\n          // handle newItem string and stripping dupes in tagging string context\n          } else {\n            // find any tagging items already in the $select.items array and store them\n            tagItems = $select.$filter('filter')(items,function (item) {\n              return item.match($select.taggingLabel);\n            });\n            if ( tagItems.length > 0 ) {\n              tagItem = tagItems[0];\n            }\n            item = items[0];\n            // remove existing tag item if found (should only ever be one tag item)\n            if ( item !== undefined && items.length > 0 && tagItem ) {\n              hasTag = true;\n              items = items.slice(1,items.length);\n              stashArr = stashArr.slice(1,stashArr.length);\n            }\n            newItem = $select.search+' '+$select.taggingLabel;\n            if ( _findApproxDupe($select.selected, $select.search) > -1 ) {\n              return;\n            }\n            // verify the the tag doesn't match the value of an existing item from\n            // the searched data set or the items already selected\n            if ( _findCaseInsensitiveDupe(stashArr.concat($select.selected)) ) {\n              // if there is a tag from prev iteration, strip it / queue the change\n              // and return early\n              if ( hasTag ) {\n                items = stashArr;\n                scope.$evalAsync( function () {\n                  $select.activeIndex = 0;\n                  $select.items = items;\n                });\n              }\n              return;\n            }\n            if ( _findCaseInsensitiveDupe(stashArr) ) {\n              // if there is a tag from prev iteration, strip it\n              if ( hasTag ) {\n                $select.items = stashArr.slice(1,stashArr.length);\n              }\n              return;\n            }\n          }\n          if ( hasTag ) dupeIndex = _findApproxDupe($select.selected, newItem);\n          // dupe found, shave the first item\n          if ( dupeIndex > -1 ) {\n            items = items.slice(dupeIndex+1,items.length-1);\n          } else {\n            items = [];\n            if (newItem) items.push(newItem);\n            items = items.concat(stashArr);\n          }\n          scope.$evalAsync( function () {\n            $select.activeIndex = 0;\n            $select.items = items;\n\n            if ($select.isGrouped) {\n              // update item references in groups, so that indexOf will work after angular.copy\n              var itemsWithoutTag = newItem ? items.slice(1) : items;\n              $select.setItemsFn(itemsWithoutTag);\n              if (newItem) {\n                // add tag item as a new group\n                $select.items.unshift(newItem);\n                $select.groups.unshift({name: '', items: [newItem], tagging: true});\n              }\n            }\n          });\n        }\n      });\n      function _findCaseInsensitiveDupe(arr) {\n        if ( arr === undefined || $select.search === undefined ) {\n          return false;\n        }\n        var hasDupe = arr.filter( function (origItem) {\n          if ( $select.search.toUpperCase() === undefined || origItem === undefined ) {\n            return false;\n          }\n          return origItem.toUpperCase() === $select.search.toUpperCase();\n        }).length > 0;\n\n        return hasDupe;\n      }\n      function _findApproxDupe(haystack, needle) {\n        var dupeIndex = -1;\n        if(angular.isArray(haystack)) {\n          var tempArr = angular.copy(haystack);\n          for (var i = 0; i <tempArr.length; i++) {\n            // handle the simple string version of tagging\n            if ( $select.tagging.fct === undefined ) {\n              // search the array for the match\n              if ( tempArr[i]+' '+$select.taggingLabel === needle ) {\n              dupeIndex = i;\n              }\n            // handle the object tagging implementation\n            } else {\n              var mockObj = tempArr[i];\n              if (angular.isObject(mockObj)) {\n                mockObj.isTag = true;\n              }\n              if ( angular.equals(mockObj, needle) ) {\n                dupeIndex = i;\n              }\n            }\n          }\n        }\n        return dupeIndex;\n      }\n\n      $select.searchInput.on('blur', function() {\n        $timeout(function() {\n          $selectMultiple.activeMatchIndex = -1;\n        });\n      });\n\n    }\n  };\n}]);\n\nuis.directive('uiSelectNoChoice',\n    ['uiSelectConfig', function (uiSelectConfig) {\n        return {\n            restrict: 'EA',\n            require: '^uiSelect',\n            replace: true,\n            transclude: true,\n            templateUrl: function (tElement) {\n                // Gets theme attribute from parent (ui-select)\n                var theme = tElement.parent().attr('theme') || uiSelectConfig.theme;\n                return theme + '/no-choice.tpl.html';\n            }\n        };\n    }]);\nuis.directive('uiSelectSingle', ['$timeout','$compile', function($timeout, $compile) {\n  return {\n    restrict: 'EA',\n    require: ['^uiSelect', '^ngModel'],\n    link: function(scope, element, attrs, ctrls) {\n\n      var $select = ctrls[0];\n      var ngModel = ctrls[1];\n\n      //From view --> model\n      ngModel.$parsers.unshift(function (inputValue) {\n        var locals = {},\n            result;\n        locals[$select.parserResult.itemName] = inputValue;\n        result = $select.parserResult.modelMapper(scope, locals);\n        return result;\n      });\n\n      //From model --> view\n      ngModel.$formatters.unshift(function (inputValue) {\n        var data = $select.parserResult.source (scope, { $select : {search:''}}), //Overwrite $search\n            locals = {},\n            result;\n        if (data){\n          var checkFnSingle = function(d){\n            locals[$select.parserResult.itemName] = d;\n            result = $select.parserResult.modelMapper(scope, locals);\n            return result == inputValue;\n          };\n          //If possible pass same object stored in $select.selected\n          if ($select.selected && checkFnSingle($select.selected)) {\n            return $select.selected;\n          }\n          for (var i = data.length - 1; i >= 0; i--) {\n            if (checkFnSingle(data[i])) return data[i];\n          }\n        }\n        return inputValue;\n      });\n\n      //Update viewValue if model change\n      scope.$watch('$select.selected', function(newValue) {\n        if (ngModel.$viewValue !== newValue) {\n          ngModel.$setViewValue(newValue);\n        }\n      });\n\n      ngModel.$render = function() {\n        $select.selected = ngModel.$viewValue;\n      };\n\n      scope.$on('uis:select', function (event, item) {\n        $select.selected = item;\n      });\n\n      scope.$on('uis:close', function (event, skipFocusser) {\n        $timeout(function(){\n          $select.focusser.prop('disabled', false);\n          if (!skipFocusser) $select.focusser[0].focus();\n        },0,false);\n      });\n\n      scope.$on('uis:activate', function () {\n        focusser.prop('disabled', true); //Will reactivate it on .close()\n      });\n\n      //Idea from: https://github.com/ivaynberg/select2/blob/79b5bf6db918d7560bdd959109b7bcfb47edaf43/select2.js#L1954\n      var focusser = angular.element(\"<input ng-disabled='$select.disabled' class='ui-select-focusser ui-select-offscreen' type='text' id='{{ $select.focusserId }}' aria-label='{{ $select.focusserTitle }}' aria-haspopup='true' role='button' />\");\n      $compile(focusser)(scope);\n      $select.focusser = focusser;\n\n      //Input that will handle focus\n      $select.focusInput = focusser;\n\n      element.parent().append(focusser);\n      focusser.bind(\"focus\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = true;\n        });\n      });\n      focusser.bind(\"blur\", function(){\n        scope.$evalAsync(function(){\n          $select.focus = false;\n        });\n      });\n      focusser.bind(\"keydown\", function(e){\n\n        if (e.which === KEY.BACKSPACE) {\n          e.preventDefault();\n          e.stopPropagation();\n          $select.select(undefined);\n          scope.$apply();\n          return;\n        }\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC) {\n          return;\n        }\n\n        if (e.which == KEY.DOWN  || e.which == KEY.UP || e.which == KEY.ENTER || e.which == KEY.SPACE){\n          e.preventDefault();\n          e.stopPropagation();\n          $select.activate();\n        }\n\n        scope.$digest();\n      });\n\n      focusser.bind(\"keyup input\", function(e){\n\n        if (e.which === KEY.TAB || KEY.isControl(e) || KEY.isFunctionKey(e) || e.which === KEY.ESC || e.which == KEY.ENTER || e.which === KEY.BACKSPACE) {\n          return;\n        }\n\n        $select.activate(focusser.val()); //User pressed some regular key, so we pass it to the search input\n        focusser.val('');\n        scope.$digest();\n\n      });\n\n\n    }\n  };\n}]);\n// Make multiple matches sortable\nuis.directive('uiSelectSort', ['$timeout', 'uiSelectConfig', 'uiSelectMinErr', function($timeout, uiSelectConfig, uiSelectMinErr) {\n  return {\n    require: '^^uiSelect',\n    link: function(scope, element, attrs, $select) {\n      if (scope[attrs.uiSelectSort] === null) {\n        throw uiSelectMinErr('sort', 'Expected a list to sort');\n      }\n\n      var options = angular.extend({\n          axis: 'horizontal'\n        },\n        scope.$eval(attrs.uiSelectSortOptions));\n\n      var axis = options.axis;\n      var draggingClassName = 'dragging';\n      var droppingClassName = 'dropping';\n      var droppingBeforeClassName = 'dropping-before';\n      var droppingAfterClassName = 'dropping-after';\n\n      scope.$watch(function(){\n        return $select.sortable;\n      }, function(newValue){\n        if (newValue) {\n          element.attr('draggable', true);\n        } else {\n          element.removeAttr('draggable');\n        }\n      });\n\n      element.on('dragstart', function(event) {\n        element.addClass(draggingClassName);\n\n        (event.dataTransfer || event.originalEvent.dataTransfer).setData('text', scope.$index.toString());\n      });\n\n      element.on('dragend', function() {\n        element.removeClass(draggingClassName);\n      });\n\n      var move = function(from, to) {\n        /*jshint validthis: true */\n        this.splice(to, 0, this.splice(from, 1)[0]);\n      };\n\n      var dragOverHandler = function(event) {\n        event.preventDefault();\n\n        var offset = axis === 'vertical' ? event.offsetY || event.layerY || (event.originalEvent ? event.originalEvent.offsetY : 0) : event.offsetX || event.layerX || (event.originalEvent ? event.originalEvent.offsetX : 0);\n\n        if (offset < (this[axis === 'vertical' ? 'offsetHeight' : 'offsetWidth'] / 2)) {\n          element.removeClass(droppingAfterClassName);\n          element.addClass(droppingBeforeClassName);\n\n        } else {\n          element.removeClass(droppingBeforeClassName);\n          element.addClass(droppingAfterClassName);\n        }\n      };\n\n      var dropTimeout;\n\n      var dropHandler = function(event) {\n        event.preventDefault();\n\n        var droppedItemIndex = parseInt((event.dataTransfer || event.originalEvent.dataTransfer).getData('text'), 10);\n\n        // prevent event firing multiple times in firefox\n        $timeout.cancel(dropTimeout);\n        dropTimeout = $timeout(function() {\n          _dropHandler(droppedItemIndex);\n        }, 20);\n      };\n\n      var _dropHandler = function(droppedItemIndex) {\n        var theList = scope.$eval(attrs.uiSelectSort);\n        var itemToMove = theList[droppedItemIndex];\n        var newIndex = null;\n\n        if (element.hasClass(droppingBeforeClassName)) {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index - 1;\n          } else {\n            newIndex = scope.$index;\n          }\n        } else {\n          if (droppedItemIndex < scope.$index) {\n            newIndex = scope.$index;\n          } else {\n            newIndex = scope.$index + 1;\n          }\n        }\n\n        move.apply(theList, [droppedItemIndex, newIndex]);\n\n        scope.$apply(function() {\n          scope.$emit('uiSelectSort:change', {\n            array: theList,\n            item: itemToMove,\n            from: droppedItemIndex,\n            to: newIndex\n          });\n        });\n\n        element.removeClass(droppingClassName);\n        element.removeClass(droppingBeforeClassName);\n        element.removeClass(droppingAfterClassName);\n\n        element.off('drop', dropHandler);\n      };\n\n      element.on('dragenter', function() {\n        if (element.hasClass(draggingClassName)) {\n          return;\n        }\n\n        element.addClass(droppingClassName);\n\n        element.on('dragover', dragOverHandler);\n        element.on('drop', dropHandler);\n      });\n\n      element.on('dragleave', function(event) {\n        if (event.target != element) {\n          return;\n        }\n        element.removeClass(droppingClassName);\n        element.removeClass(droppingBeforeClassName);\n        element.removeClass(droppingAfterClassName);\n\n        element.off('dragover', dragOverHandler);\n        element.off('drop', dropHandler);\n      });\n    }\n  };\n}]);\n\n/**\n * Debounces functions\n *\n * Taken from UI Bootstrap $$debounce source code\n * See https://github.com/angular-ui/bootstrap/blob/master/src/debounce/debounce.js\n *\n */\nuis.factory('$$uisDebounce', ['$timeout', function($timeout) {\n  return function(callback, debounceTime) {\n    var timeoutPromise;\n\n    return function() {\n      var self = this;\n      var args = Array.prototype.slice.call(arguments);\n      if (timeoutPromise) {\n        $timeout.cancel(timeoutPromise);\n      }\n\n      timeoutPromise = $timeout(function() {\n        callback.apply(self, args);\n      }, debounceTime);\n    };\n  };\n}]);\n\n/**\n * Parses \"repeat\" attribute.\n *\n * Taken from AngularJS ngRepeat source code\n * See https://github.com/angular/angular.js/blob/v1.2.15/src/ng/directive/ngRepeat.js#L211\n *\n * Original discussion about parsing \"repeat\" attribute instead of fully relying on ng-repeat:\n * https://github.com/angular-ui/ui-select/commit/5dd63ad#commitcomment-5504697\n */\n\nuis.service('uisRepeatParser', ['uiSelectMinErr','$parse', function(uiSelectMinErr, $parse) {\n  var self = this;\n\n  /**\n   * Example:\n   * expression = \"address in addresses | filter: {street: $select.search} track by $index\"\n   * itemName = \"address\",\n   * source = \"addresses | filter: {street: $select.search}\",\n   * trackByExp = \"$index\",\n   */\n  self.parse = function(expression) {\n\n\n    var match;\n    //var isObjectCollection = /\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)/.test(expression);\n    // If an array is used as collection\n\n    // if (isObjectCollection){\n    // 000000000000000000000000000000111111111000000000000000222222222222220033333333333333333333330000444444444444444444000000000000000055555555555000000000000000000000066666666600000000\n    match = expression.match(/^\\s*(?:([\\s\\S]+?)\\s+as\\s+)?(?:([\\$\\w][\\$\\w]*)|(?:\\(\\s*([\\$\\w][\\$\\w]*)\\s*,\\s*([\\$\\w][\\$\\w]*)\\s*\\)))\\s+in\\s+(\\s*[\\s\\S]+?)?(?:\\s+track\\s+by\\s+([\\s\\S]+?))?\\s*$/);\n\n    // 1 Alias\n    // 2 Item\n    // 3 Key on (key,value)\n    // 4 Value on (key,value)\n    // 5 Source expression (including filters)\n    // 6 Track by\n\n    if (!match) {\n      throw uiSelectMinErr('iexp', \"Expected expression in form of '_item_ in _collection_[ track by _id_]' but got '{0}'.\",\n              expression);\n    }\n    \n    var source = match[5], \n        filters = '';\n\n    // When using (key,value) ui-select requires filters to be extracted, since the object\n    // is converted to an array for $select.items \n    // (in which case the filters need to be reapplied)\n    if (match[3]) {\n      // Remove any enclosing parenthesis\n      source = match[5].replace(/(^\\()|(\\)$)/g, '');\n      // match all after | but not after ||\n      var filterMatch = match[5].match(/^\\s*(?:[\\s\\S]+?)(?:[^\\|]|\\|\\|)+([\\s\\S]*)\\s*$/);\n      if(filterMatch && filterMatch[1].trim()) {\n        filters = filterMatch[1];\n        source = source.replace(filters, '');\n      }      \n    }\n\n    return {\n      itemName: match[4] || match[2], // (lhs) Left-hand side,\n      keyName: match[3], //for (key, value) syntax\n      source: $parse(source),\n      filters: filters,\n      trackByExp: match[6],\n      modelMapper: $parse(match[1] || match[4] || match[2]),\n      repeatExpression: function (grouped) {\n        var expression = this.itemName + ' in ' + (grouped ? '$group.items' : '$select.items');\n        if (this.trackByExp) {\n          expression += ' track by ' + this.trackByExp;\n        }\n        return expression;\n      } \n    };\n\n  };\n\n  self.getGroupNgRepeatExpression = function() {\n    return '$group in $select.groups';\n  };\n\n}]);\n\n}());\nangular.module(\"ui.select\").run([\"$templateCache\", function($templateCache) {$templateCache.put(\"bootstrap/choices.tpl.html\",\"<ul class=\\\"ui-select-choices ui-select-choices-content ui-select-dropdown dropdown-menu\\\" role=\\\"listbox\\\" ng-show=\\\"$select.open\\\"><li class=\\\"ui-select-choices-group\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\"><div class=\\\"divider\\\" ng-show=\\\"$select.isGrouped && $index > 0\\\"></div><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label dropdown-header\\\" ng-bind=\\\"$group.name\\\"></div><div ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\" role=\\\"option\\\"><a href=\\\"\\\" class=\\\"ui-select-choices-row-inner\\\"></a></div></li></ul>\");\n$templateCache.put(\"bootstrap/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><span ng-repeat=\\\"$item in $select.selected\\\"><span class=\\\"ui-select-match-item btn btn-default btn-xs\\\" tabindex=\\\"-1\\\" type=\\\"button\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.activeMatchIndex = $index;\\\" ng-class=\\\"{\\'btn-primary\\':$selectMultiple.activeMatchIndex === $index, \\'select-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span class=\\\"close ui-select-match-close\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\">&nbsp;&times;</span> <span uis-transclude-append=\\\"\\\"></span></span></span></span>\");\n$templateCache.put(\"bootstrap/match.tpl.html\",\"<div class=\\\"ui-select-match\\\" ng-hide=\\\"$select.open\\\" ng-disabled=\\\"$select.disabled\\\" ng-class=\\\"{\\'btn-default-focus\\':$select.focus}\\\"><span tabindex=\\\"-1\\\" class=\\\"btn btn-default form-control ui-select-toggle\\\" aria-label=\\\"{{ $select.baseTitle }} activate\\\" ng-disabled=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" style=\\\"outline: 0;\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"ui-select-placeholder text-muted\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"ui-select-match-text pull-left\\\" ng-class=\\\"{\\'ui-select-allow-clear\\': $select.allowClear && !$select.isEmpty()}\\\" ng-transclude=\\\"\\\"></span> <i class=\\\"caret pull-right\\\" ng-click=\\\"$select.toggle($event)\\\"></i> <a ng-show=\\\"$select.allowClear && !$select.isEmpty()\\\" aria-label=\\\"{{ $select.baseTitle }} clear\\\" style=\\\"margin-right: 10px\\\" ng-click=\\\"$select.clear($event)\\\" class=\\\"btn btn-xs btn-link pull-right\\\"><i class=\\\"glyphicon glyphicon-remove\\\" aria-hidden=\\\"true\\\"></i></a></span></div>\");\n$templateCache.put(\"bootstrap/no-choice.tpl.html\",\"<ul class=\\\"ui-select-no-choice dropdown-menu\\\" ng-show=\\\"$select.items.length == 0\\\"><li ng-transclude=\\\"\\\"></li></ul>\");\n$templateCache.put(\"bootstrap/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple ui-select-bootstrap dropdown form-control\\\" ng-class=\\\"{open: $select.open}\\\"><div><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" class=\\\"ui-select-search input-xs\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-click=\\\"$select.activate()\\\" ng-model=\\\"$select.search\\\" role=\\\"combobox\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" ondrop=\\\"return false;\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");\n$templateCache.put(\"bootstrap/select.tpl.html\",\"<div class=\\\"ui-select-container ui-select-bootstrap dropdown\\\" ng-class=\\\"{open: $select.open}\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" aria-expanded=\\\"true\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"form-control ui-select-search\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-show=\\\"$select.searchEnabled && $select.open\\\"><div class=\\\"ui-select-choices\\\"></div><div class=\\\"ui-select-no-choice\\\"></div></div>\");\n$templateCache.put(\"select2/choices.tpl.html\",\"<ul tabindex=\\\"-1\\\" class=\\\"ui-select-choices ui-select-choices-content select2-results\\\"><li class=\\\"ui-select-choices-group\\\" ng-class=\\\"{\\'select2-result-with-children\\': $select.choiceGrouped($group) }\\\"><div ng-show=\\\"$select.choiceGrouped($group)\\\" class=\\\"ui-select-choices-group-label select2-result-label\\\" ng-bind=\\\"$group.name\\\"></div><ul role=\\\"listbox\\\" id=\\\"ui-select-choices-{{ $select.generatedId }}\\\" ng-class=\\\"{\\'select2-result-sub\\': $select.choiceGrouped($group), \\'select2-result-single\\': !$select.choiceGrouped($group) }\\\"><li role=\\\"option\\\" ng-attr-id=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{$index}}\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{\\'select2-highlighted\\': $select.isActive(this), \\'select2-disabled\\': $select.isDisabled(this)}\\\"><div class=\\\"select2-result-label ui-select-choices-row-inner\\\"></div></li></ul></li></ul>\");\n$templateCache.put(\"select2/match-multiple.tpl.html\",\"<span class=\\\"ui-select-match\\\"><li class=\\\"ui-select-match-item select2-search-choice\\\" ng-repeat=\\\"$item in $select.selected\\\" ng-class=\\\"{\\'select2-search-choice-focus\\':$selectMultiple.activeMatchIndex === $index, \\'select2-locked\\':$select.isLocked(this, $index)}\\\" ui-select-sort=\\\"$select.selected\\\"><span uis-transclude-append=\\\"\\\"></span> <a href=\\\"javascript:;\\\" class=\\\"ui-select-match-close select2-search-choice-close\\\" ng-click=\\\"$selectMultiple.removeChoice($index)\\\" tabindex=\\\"-1\\\"></a></li></span>\");\n$templateCache.put(\"select2/match.tpl.html\",\"<a class=\\\"select2-choice ui-select-match\\\" ng-class=\\\"{\\'select2-default\\': $select.isEmpty()}\\\" ng-click=\\\"$select.toggle($event)\\\" aria-label=\\\"{{ $select.baseTitle }} select\\\"><span ng-show=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\">{{$select.placeholder}}</span> <span ng-hide=\\\"$select.isEmpty()\\\" class=\\\"select2-chosen\\\" ng-transclude=\\\"\\\"></span> <abbr ng-if=\\\"$select.allowClear && !$select.isEmpty()\\\" class=\\\"select2-search-choice-close\\\" ng-click=\\\"$select.clear($event)\\\"></abbr> <span class=\\\"select2-arrow ui-select-toggle\\\"><b></b></span></a>\");\n$templateCache.put(\"select2/select-multiple.tpl.html\",\"<div class=\\\"ui-select-container ui-select-multiple select2 select2-container select2-container-multi\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled}\\\"><ul class=\\\"select2-choices\\\"><span class=\\\"ui-select-match\\\"></span><li class=\\\"select2-search-field\\\"><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"select2-input ui-select-search\\\" placeholder=\\\"{{$selectMultiple.getPlaceholder()}}\\\" ng-disabled=\\\"$select.disabled\\\" ng-hide=\\\"$select.disabled\\\" ng-model=\\\"$select.search\\\" ng-click=\\\"$select.activate()\\\" style=\\\"width: 34px;\\\" ondrop=\\\"return false;\\\"></li></ul><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"select2/select.tpl.html\",\"<div class=\\\"ui-select-container select2 select2-container\\\" ng-class=\\\"{\\'select2-container-active select2-dropdown-open open\\': $select.open, \\'select2-container-disabled\\': $select.disabled, \\'select2-container-active\\': $select.focus, \\'select2-allowclear\\': $select.allowClear && !$select.isEmpty()}\\\"><div class=\\\"ui-select-match\\\"></div><div class=\\\"ui-select-dropdown select2-drop select2-with-searchbox select2-drop-active\\\" ng-class=\\\"{\\'select2-display-none\\': !$select.open}\\\"><div class=\\\"select2-search\\\" ng-show=\\\"$select.searchEnabled\\\"><input type=\\\"text\\\" autocomplete=\\\"off\\\" autocorrect=\\\"false\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"false\\\" role=\\\"combobox\\\" aria-expanded=\\\"true\\\" aria-owns=\\\"ui-select-choices-{{ $select.generatedId }}\\\" aria-label=\\\"{{ $select.baseTitle }}\\\" aria-activedescendant=\\\"ui-select-choices-row-{{ $select.generatedId }}-{{ $select.activeIndex }}\\\" class=\\\"ui-select-search select2-input\\\" ng-model=\\\"$select.search\\\"></div><div class=\\\"ui-select-choices\\\"></div></div></div>\");\n$templateCache.put(\"selectize/choices.tpl.html\",\"<div ng-show=\\\"$select.open\\\" class=\\\"ui-select-choices ui-select-dropdown selectize-dropdown single\\\"><div class=\\\"ui-select-choices-content selectize-dropdown-content\\\"><div class=\\\"ui-select-choices-group optgroup\\\" role=\\\"listbox\\\"><div ng-show=\\\"$select.isGrouped\\\" class=\\\"ui-select-choices-group-label optgroup-header\\\" ng-bind=\\\"$group.name\\\"></div><div role=\\\"option\\\" class=\\\"ui-select-choices-row\\\" ng-class=\\\"{active: $select.isActive(this), disabled: $select.isDisabled(this)}\\\"><div class=\\\"option ui-select-choices-row-inner\\\" data-selectable=\\\"\\\"></div></div></div></div></div>\");\n$templateCache.put(\"selectize/match.tpl.html\",\"<div ng-hide=\\\"($select.open || $select.isEmpty())\\\" class=\\\"ui-select-match\\\" ng-transclude=\\\"\\\"></div>\");\n$templateCache.put(\"selectize/select.tpl.html\",\"<div class=\\\"ui-select-container selectize-control single\\\" ng-class=\\\"{\\'open\\': $select.open}\\\"><div class=\\\"selectize-input\\\" ng-class=\\\"{\\'focus\\': $select.open, \\'disabled\\': $select.disabled, \\'selectize-focus\\' : $select.focus}\\\" ng-click=\\\"$select.open && !$select.searchEnabled ? $select.toggle($event) : $select.activate()\\\"><div class=\\\"ui-select-match\\\"></div><input type=\\\"text\\\" autocomplete=\\\"off\\\" tabindex=\\\"-1\\\" class=\\\"ui-select-search ui-select-toggle\\\" ng-click=\\\"$select.toggle($event)\\\" placeholder=\\\"{{$select.placeholder}}\\\" ng-model=\\\"$select.search\\\" ng-hide=\\\"!$select.searchEnabled || ($select.selected && !$select.open)\\\" ng-disabled=\\\"$select.disabled\\\" aria-label=\\\"{{ $select.baseTitle }}\\\"></div><div class=\\\"ui-select-choices\\\"></div></div>\");}]);",null,null],"sourceRoot":"/source/"}